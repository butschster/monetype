{"version":3,"sources":["app.js","form.js","api.js","components.js","articles.js","run.js"],"names":[],"mappingsrvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var App = {\r\n    Controllers: {\r\n        _controllers: [],\r\n        add: function (rout, callback) {\r\n            if (typeof(callback) != 'function')\r\n                return this;\r\n\r\n            if (typeof(rout) == 'object')\r\n                for (var i = 0; i < rout.length; i++)\r\n                    this._controllers.push([rout[i], callback]);\r\n            else if (typeof(rout) == 'string')\r\n                this._controllers.push([rout, callback]);\r\n\r\n            return this;\r\n        },\r\n        call: function () {\r\n            var body_id = $('body:first').attr('id');\r\n            for (var i = 0; i < this._controllers.length; i++)\r\n                if (body_id == 'body.' + this._controllers[i][0])\r\n                    this._controllers[i][1](this._controllers[i][0]);\r\n        }\r\n    },\r\n    Components: {\r\n\r\n        // 0: name\r\n        // 1: callback\r\n        // 2: priority\r\n\r\n        _elements: [],\r\n        _modules: [],\r\n        add: function (module, callback, priority) {\r\n            if (typeof(callback) != 'function')\r\n                return this;\r\n\r\n            this._elements.push([module, callback, priority || 0]);\r\n            return this;\r\n        },\r\n        addModule: function (module, callback, priority) {\r\n            if (typeof(callback) != 'function')\r\n                return this;\r\n\r\n            this._modules.push([module, callback, priority || 0]);\r\n            return this;\r\n        },\r\n        call: function (module) {\r\n            for (var i = 0; i < this._elements.length; i++) {\r\n                var elm = this._elements[i];\r\n                if (_.isArray(module) && _.indexOf(module, elm[0]) != -1)\r\n                    elm[1]();\r\n                else if (module == elm[0])\r\n                    elm[1]();\r\n            }\r\n        },\r\n        init: function (module) {\r\n            this._elements = _.sortBy(this._elements, 2);\r\n            this._modules = _.sortBy(this._modules, 2);\r\n\r\n            for (i in this._elements) {\r\n                var elm = this._elements[i];\r\n\r\n                try {\r\n                    if (!module)\r\n                        elm[1]();\r\n                    else if (_.isArray(module) && _.indexOf(module, elm[0]) != -1)\r\n                        elm[1]();\r\n                    else if (module == elm[0])\r\n                        elm[1]();\r\n                } catch (e) {\r\n                    console.log(elm[0], e);\r\n                }\r\n            }\r\n\r\n            var modules = [];\r\n            $('[data-module]').each(function () {\r\n                modules.push($(this).data('module'));\r\n            });\r\n\r\n            modules = _.uniq(modules);\r\n            for (i in this._modules) {\r\n                var module = this._modules[i],\r\n                    moduleName = module[0];\r\n\r\n                if (_.indexOf(modules, moduleName) != -1) {\r\n                    module[1]();\r\n                }\r\n            }\r\n        }\r\n    },\r\n    Messages: {\r\n        init: function () {\r\n            if (typeof MESSAGE_ERRORS == 'undefined') return;\r\n            this.parse(MESSAGE_ERRORS, 'error');\r\n            this.parse(MESSAGE_SUCCESS);\r\n\r\n            $('body').on('show_message', $.proxy(function () {\r\n                var messages = _.toArray(arguments).slice(1);\r\n                this.parse(messages);\r\n            }, this));\r\n        },\r\n        parse: function ($messages, $type) {\r\n            for (text in $messages) {\r\n                if (text == '_external') {\r\n                    this.parse($messages[text], $type);\r\n                    continue;\r\n                }\r\n\r\n                this.show($messages[text], $type);\r\n            }\r\n        },\r\n        show: function (msg, type, icon) {\r\n            if (!type) type = 'success';\r\n\r\n            window.top.noty({\r\n                layout: 'topRight',\r\n                type: type,\r\n                icon: icon || 'fa fa-ok',\r\n                text: decodeURIComponent(msg)\r\n            });\r\n        },\r\n        error: function (message) {\r\n            this.show(message, 'error');\r\n        }\r\n    },\r\n    Dialog: {\r\n        confirm: function (message, callback, title, className) {\r\n            bootbox.confirm({\r\n                title: title || 'Подтверждение действия',\r\n                message: message,\r\n                className: 'modal-alert modal-warning',\r\n                closeButton: false,\r\n                callback: function (result) {\r\n                    if (result) callback();\r\n                },\r\n                buttons: {\r\n                    confirm: {\r\n                        label: 'Да',\r\n                        className: \"btn-success btn-lg\"\r\n                    },\r\n                    cancel: {\r\n                        label: 'Нет',\r\n                        className: \"btn-default btn-lg\"\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    Loader: {\r\n        counter: 0,\r\n        getLastId: function () {\r\n            return this.counter;\r\n        },\r\n        init: function (container, message) {\r\n            if (container !== undefined && !(container instanceof jQuery)) {\r\n                container = $(container);\r\n            }\r\n            else if (container === undefined) {\r\n                container = $('body');\r\n            }\r\n\r\n            ++this.counter;\r\n\r\n            var $loader = $('<div class=\"_loader_container\"><span class=\"_loader_preloader\" /></div>');\r\n\r\n            if (message !== undefined) {\r\n                if (message instanceof jQuery)\r\n                    $loader.append(message);\r\n                else\r\n                    $loader.append('<span class=\"_loader_message\">' + message + '</span>');\r\n            }\r\n\r\n            return $loader\r\n                .appendTo(container)\r\n                .css({\r\n                    width: container.outerWidth(true),\r\n                    height: container.outerHeight(true),\r\n                    top: container.offset().top - $(window).scrollTop(),\r\n                    left: container.offset().left - $(window).scrollLeft()\r\n                })\r\n                .prop('id', 'loader' + this.getLastId());\r\n        },\r\n        show: function (container, message, speed) {\r\n            var speed = speed || 500;\r\n\r\n            this.init(container, message).fadeTo(speed, 0.7);\r\n            return this.counter;\r\n        },\r\n        hide: function (id) {\r\n            if (!id)\r\n                cont = $('._loader_container');\r\n            else\r\n                cont = $('#loader' + id);\r\n\r\n            cont.stop().fadeOut(400, function () {\r\n                $(this).remove();\r\n            });\r\n        }\r\n    }\r\n}","App.Form = {\r\n    extend: function (key, data) {\r\n        if (!data) var data = {};\r\n\r\n        data['_prefix'] = key;\r\n        App.Form[key] = $.extend(this._decorator, data);\r\n        return App.Form[key];\r\n    },\r\n    _decorator: {\r\n        _id: null,\r\n        _api_url: null,\r\n        _api_method: null,\r\n        _prefix: null,\r\n        _key: null,\r\n        _timestamp: null,\r\n        _isChanged: false,\r\n        _form: null,\r\n        _autoSaveTimer: null,\r\n        _fieldsData: {},\r\n        _submitButton: null,\r\n        messages: {\r\n            saved: null\r\n        },\r\n        fields: {},\r\n        autoSaveDelay: 5000,\r\n        init: function (form) {\r\n            this._form = form;\r\n            this._key = 'form' + this._prefix + this._id;\r\n\r\n            $(this._form).on('click', ':button', $.proxy(function (e) {\r\n                this._submitButton = $(e.target);\r\n            }, this));\r\n\r\n            this._fieldsData['timestamp'] = new Date().getTime();\r\n\r\n            if ((this._api_url === null || !this._api_url.length) && this._form.attr('action').indexOf('api.') >= 0) {\r\n                this._api_url = this._form.attr('action');\r\n            }\r\n\r\n            if (this._api_method === null || !this._api_method.length) {\r\n                var $method = $('input[name=\"_method\"]', this._form);\r\n\r\n                this._api_method = $method.size()\r\n                    ? $method.val().toLowerCase()\r\n                    : this._form.prop('method').toLowerCase();\r\n            }\r\n\r\n            this._autoSaveTimer = setInterval($.proxy(this.onBackup, this), this.autoSaveDelay);\r\n\r\n            this.getFieldsData();\r\n            this._id = this._fieldsData['id'];\r\n\r\n            this.onLoad();\r\n            $(window).unload($.proxy(this.onUnload, this));\r\n        },\r\n        getFieldsData: function () {\r\n            for (i in this.fields)\r\n                this._fieldsData[i] = this._getFieldData(i);\r\n\r\n            return this._fieldsData;\r\n        },\r\n        setFieldsData: function (data) {\r\n            for (i in this.fields) {\r\n                if (i == 'id') continue;\r\n                this._setFieldData(i, data[i]);\r\n            }\r\n        },\r\n        getField: function (name) {\r\n            switch (this.fields[name]) {\r\n                case 'multiple':\r\n                    return $(':input[name=\"' + name + '[]\"]', this._form)\r\n                default:\r\n                    return $(':input[name=\"' + name + '\"]', this._form)\r\n            }\r\n        },\r\n        _getFieldData: function (name) {\r\n            if (!this.fields[name]) return null;\r\n\r\n            var $elm = this.getField(name);\r\n\r\n            switch (this.fields[name]) {\r\n                case 'checkbox':\r\n                    return $elm.prop('checked');\r\n                case 'tags':\r\n                    return $elm.val().split(',');\r\n                default:\r\n                    return $elm.val();\r\n            }\r\n        },\r\n        _setFieldData: function (name, value) {\r\n            if (!this.fields[name]) return false;\r\n\r\n            var $elm = this.getField(name);\r\n\r\n            switch (this.fields[name]) {\r\n                case 'checkbox':\r\n                    $elm.prop('checked', value);\r\n                    break;\r\n                case 'tags':\r\n                    $elm.val(value.join()).trigger('change');\r\n                    break;\r\n                case 'multiple':\r\n                    $elm.val(value).trigger('change');\r\n                    break;\r\n                default:\r\n                    $elm.val(value).trigger('change');\r\n            }\r\n        },\r\n\r\n        /******************************************\r\n         * LocalStorage\r\n         ******************************************/\r\n        saveToLocalStorage: function (data) {\r\n            $.jStorage.set(this._key, data);\r\n            this._isChanged = false;\r\n        },\r\n        getFromLocalStorage: function () {\r\n            return $.jStorage.get(this._key);\r\n        },\r\n        clearLocalStorage: function () {\r\n            $.jStorage.deleteKey(this._key);\r\n        },\r\n        /******************************************\r\n         * Validation\r\n         ******************************************/\r\n        clearErrors: function () {\r\n            $('.validation-error').remove();\r\n            $('.form-group').removeClass('has-error');\r\n        },\r\n        onFailValidation: function (errors) {\r\n            for (field in errors) {\r\n                if (!this.fields[field]) continue;\r\n\r\n                var $elm = this.getField(field)\r\n\r\n                $elm.closest('.form-group')\r\n                    .addClass('has-error')\r\n                    .end();\r\n\r\n                for (i in errors[field]) {\r\n                    $elm.after($('<p class=\"help-block validation-error\" />').text(errors[field][i]));\r\n                }\r\n\r\n            }\r\n        },\r\n        /******************************************\r\n         * Events\r\n         ******************************************/\r\n        onLoad: function () {\r\n            this._form\r\n                .on('submit', $.proxy(this.onSubmit, this))\r\n                .on('change keyup', 'input, select, textarea', $.proxy(this.onChange, this));\r\n\r\n            this.showAutoSaveNotify();\r\n        },\r\n        onChange: function (e) {\r\n            e.preventDefault();\r\n            this._isChanged = true;\r\n\r\n            // Удаляем уведомление об автосохранении\r\n            $('#notification_autosave').remove();\r\n        },\r\n        onSubmit: function (e) {\r\n            this.clearErrors();\r\n\r\n            $(':button', this._form).prop('disabled', true);\r\n\r\n            if(this._api_url) {\r\n                e.preventDefault();\r\n                Api[this._api_method](this._api_url, this.getFieldsData(), $.proxy(this.onResponse, this));\r\n\r\n                return false;\r\n            }\r\n        },\r\n        onResponse: function (response) {\r\n            $(':button', this._form).prop('disabled', false);\r\n\r\n            this.clearLocalStorage();\r\n\r\n            switch (response.code) {\r\n                case 120: // Validation\r\n                    return this.onFailValidation(response.errors);\r\n                    break;\r\n                case 200:\r\n                    if (this.messages.saved.length > 0)\r\n                        noty({text: this.messages.saved, type: 'success'});\r\n                    break;\r\n                default:\r\n\r\n                    break;\r\n            }\r\n        },\r\n        /******************************************\r\n         * Backup\r\n         ******************************************/\r\n        showAutoSaveNotify: function () {\r\n            var data = this.getFromLocalStorage();\r\n            if (_.isObject(data) && !_.isEmpty(data)) {\r\n                var time = new Date(data['timestamp']);\r\n\r\n                // TODO: добавить локализацию\r\n                this._form.prepend(_.template('<div class=\"alert alert-warning m-b-none\" id=\"notification_autosave\">' +\r\n                    'У вас есть автосохранение от <b><%= date %> <%= time %></b>, ' +\r\n                    '<a href=\"#reset\" class=\"reset_form_from_autosave\">восстановить форму</a>?' +\r\n                    '</div>')({\r\n                    date: _getDate(time),\r\n                    time: _getTime(time)\r\n                }));\r\n\r\n                // Восстановление\r\n                $('.reset_form_from_autosave').on('click', $.proxy(function (e) {\r\n                    e.preventDefault();\r\n                    this.onRestore(data);\r\n                    $('#notification_autosave').remove();\r\n                }, this));\r\n            }\r\n        },\r\n        onBackup: function (e) {\r\n            if (!this._isChanged) return;\r\n\r\n            var data = this.getFieldsData();\r\n            data['timestamp'] = new Date().getTime();\r\n\r\n            // Store data to the storage\r\n            this.saveToLocalStorage(data);\r\n        },\r\n        onRestore: function (data) {\r\n            // Restore data from the storage\r\n            this.setFieldsData(data);\r\n        },\r\n        onUnload: function (e) {\r\n            this.onBackup(e);\r\n        }\r\n    }\r\n}\r\n\r\n// TODO: добавить локализацию\r\nfunction _getDate(d) {\r\n    var month_names = new Array(\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\");\r\n    var current_date = d.getDate();\r\n    var current_month = d.getMonth();\r\n    var current_year = d.getFullYear();\r\n    return current_date + \" \" + month_names[current_month] + \" \" + current_year\r\n}\r\n\r\nfunction _getTime(currentTime) {\r\n    var hours = currentTime.getHours();\r\n    var minutes = currentTime.getMinutes();\r\n    if (minutes < 10) {\r\n        minutes = \"0\" + minutes\r\n    }\r\n    return hours + \":\" + minutes\r\n}","var Api = {\r\n    _response: null,\r\n    get: function (uri, data, callback, async) {\r\n        return this.request('GET', uri, data, callback, async);\r\n    },\r\n    post: function (uri, data, callback, async) {\r\n        return this.request('POST', uri, data, callback, async);\r\n    },\r\n    put: function (uri, data, callback, async) {\r\n        return this.request('PUT', uri, data, callback, async);\r\n    },\r\n    'delete': function (uri, data, callback, async) {\r\n        return this.request('DELETE', uri, data, callback, async);\r\n    },\r\n    request: function (method, uri, data, callback, async) {\r\n        var url = this.parseUrl(uri);\r\n\r\n        $.ajaxSetup({\r\n            contentType: 'application/json'\r\n        });\r\n\r\n        if (data instanceof jQuery) {\r\n            data = Api.serializeObject(data);\r\n        }\r\n\r\n        if (typeof(data) == 'object' && method.toLowerCase() != 'get') {\r\n            data = JSON.stringify(data);\r\n        }\r\n\r\n        return $.ajax({\r\n            type: method,\r\n            url: url,\r\n            data: data,\r\n            dataType: 'json',\r\n            async: async !== false\r\n        })\r\n            .done(function (response) {\r\n                this._response = response;\r\n\r\n                if (response.code != 200)\r\n                    return Api.exception(response, callback);\r\n\r\n                window.top.$('body').trigger(Api.getEventKey(method, url), [this._response]);\r\n\r\n                if (response.message && response.code == 200)\r\n                    App.Messages.show(response.message, 'information');\r\n\r\n                if (response.popup && response.code == 200)\r\n                    Popup.openHTML(response.popup);\r\n\r\n                if (typeof(callback) == 'function') callback(this._response);\r\n            })\r\n            .fail(function (e) {\r\n                return Api.exception(e.responseJSON, callback);\r\n            });\r\n    },\r\n    parseUrl: function (url) {\r\n        return url;\r\n    },\r\n    getEventKey: function (method, url) {\r\n        var event = method + url.replace(SITE_URL, \":\").replace(/\\//g, ':');\r\n        return event.toLowerCase()\r\n    },\r\n    serializeObject: function (form) {\r\n        var json = {},\r\n            push_counters = {},\r\n            patterns = {\r\n                \"validate\": /^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/,\r\n                \"key\": /[a-zA-Z0-9_]+|(?=\\[\\])/g,\r\n                \"push\": /^$/,\r\n                \"fixed\": /^\\d+$/,\r\n                \"named\": /^[a-zA-Z0-9_]+$/\r\n            };\r\n\r\n        var build = function (base, key, value) {\r\n            base[key] = value;\r\n            return base;\r\n        };\r\n\r\n        var push_counter = function (key) {\r\n            if (push_counters[key] === undefined) {\r\n                push_counters[key] = 0;\r\n            }\r\n            return push_counters[key]++;\r\n        };\r\n\r\n        $.each(form.serializeArray(), function () {\r\n            // skip invalid keys\r\n            if (!patterns.validate.test(this.name)) {\r\n                return;\r\n            }\r\n            var k,\r\n                keys = this.name.match(patterns.key),\r\n                merge = this.value,\r\n                reverse_key = this.name;\r\n\r\n            while ((k = keys.pop()) !== undefined) {\r\n                // adjust reverse_key\r\n                reverse_key = reverse_key.replace(new RegExp(\"\\\\[\" + k + \"\\\\]$\"), '');\r\n                // push\r\n                if (k.match(patterns.push)) {\r\n                    merge = build([], push_counter(reverse_key), merge);\r\n                }\r\n                // fixed\r\n                else if (k.match(patterns.fixed)) {\r\n                    merge = build([], k, merge);\r\n                }\r\n                // named\r\n                else if (k.match(patterns.named)) {\r\n                    merge = build({}, k, merge);\r\n                }\r\n            }\r\n            json = $.extend(true, json, merge);\r\n        });\r\n        return json;\r\n    },\r\n    exception: function (response, callback) {\r\n        if (typeof(callback) == 'function')\r\n            callback(response);\r\n\r\n        switch (response.code) {\r\n            case 220: // ERROR_PERMISSIONS\r\n\r\n                break;\r\n            case 110: // ERROR_MISSING_PAPAM\r\n                App.Messages.show(response.message, 'error', 'fa fa-exclamation-triangle');\r\n                break;\r\n            case 120: // ERROR_VALIDATION\r\n                for (i in response.errors) {\r\n                    App.Messages.show(response.errors[i], 'error', 'fa fa-exclamation-triangle');\r\n                }\r\n                break;\r\n            case 130: // ERROR_UNKNOWN\r\n            case 140: // ERROR_TOKEN\r\n            case 150: // ERROR_MISSING_ASSIGMENT\r\n\r\n                break;\r\n            case 301: // Redirect\r\n            case 302: // Redirect\r\n                window.location.href = response.targetUrl;\r\n                break;\r\n            case 403: // ERROR_UNAUTHORIZED\r\n            case 404: // ERROR_PAGE_NOT_FOUND\r\n                break;\r\n            default:\r\n                App.Messages.show(response.message, 'error', 'fa fa-exclamation-triangle');\r\n        }\r\n    },\r\n    response: function () {\r\n        return this._response;\r\n    }\r\n};","App.Components\r\n    .add('ajaxSetup', function () {\r\n        $.ajaxSetup({\r\n            headers: {'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')}\r\n        });\r\n    })\r\n    .add('i18nSetup', function () {\r\n        i18n.init({\r\n            lng: 'ru',\r\n            fallbackLng: [],\r\n            resGetPath: '/js/lang/__lng__.json',\r\n        });\r\n    })\r\n    .add('select', function () {\r\n        $(\"select\").select2();\r\n    })\r\n    .add('notySetup', function () {\r\n        $.noty.defaults = $.extend($.noty.defaults, {\r\n            layout: 'topRight',\r\n            theme: 'relax',\r\n            timeout: 3000\r\n        });\r\n    })\r\n    .add('validator.default', function () {\r\n        $.validator.setDefaults({\r\n            highlight: function (element) {\r\n                var elem = $(element);\r\n                if (elem.hasClass(\"select2-offscreen\")) {\r\n                    $(\"#s2id_\" + elem.attr(\"id\") + \" ul\")\r\n                        .closest('.form-group')\r\n                        .addClass('has-error');\r\n                } else {\r\n                    elem\r\n                        .closest('.form-group')\r\n                        .addClass('has-error');\r\n                }\r\n            },\r\n            unhighlight: function (element) {\r\n                var elem = $(element);\r\n\r\n                if (elem.hasClass(\"select2-offscreen\")) {\r\n                    $(\"#s2id_\" + elem.attr(\"id\") + \" ul\")\r\n                        .closest('.form-group')\r\n                        .removeClass('has-error')\r\n                        .find('help-block-hidden')\r\n                        .removeClass('help-block-hidden')\r\n                        .addClass('help-block')\r\n                        .show();\r\n                } else {\r\n                    elem\r\n                        .closest('.form-group')\r\n                        .removeClass('has-error')\r\n                        .find('help-block-hidden')\r\n                        .removeClass('help-block-hidden')\r\n                        .addClass('help-block')\r\n                        .show();\r\n                }\r\n            },\r\n            errorElement: 'p',\r\n            errorClass: 'jquery-validate-error help-block',\r\n            errorPlacement: function (error, element) {\r\n                var $p, has_e, is_c;\r\n                is_c = element.is('input[type=\"checkbox\"]') || element.is('input[type=\"radio\"]');\r\n                has_e = element.closest('.form-group').find('.jquery-validate-error').length;\r\n                if (!is_c || !has_e) {\r\n                    if (!has_e) {\r\n                        element.closest('.form-group').find('.help-block').removeClass('help-block').addClass('help-block-hidden').hide();\r\n                    }\r\n                    error.addClass('help-block');\r\n                    if (is_c) {\r\n                        return element.closest('[class*=\"col-\"]').append(error);\r\n                    } else {\r\n                        $p = element.parent();\r\n                        if ($p.is('.input-group')) {\r\n                            return $p.parent().append(error);\r\n                        } else {\r\n                            return $p.append(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    })\r\n    .add('tags', function () {\r\n        $('textarea.input-tags').select2({\r\n            tags: [],\r\n            minimumInputLength: 0,\r\n            tokenSeparators: [',', ' ', ';'],\r\n            createSearchChoice: function (term, data) {\r\n                if ($(data).filter(function () {\r\n                        return this.text.localeCompare(term) === 0;\r\n                    }).length === 0) {\r\n                    return {\r\n                        id: term,\r\n                        text: term\r\n                    };\r\n                }\r\n            },\r\n            multiple: true,\r\n            ajax: {\r\n                url: '/api.tags',\r\n                dataType: \"json\",\r\n                data: function (term, page) {\r\n                    return {tag: term};\r\n                },\r\n                results: function (data, page) {\r\n                    if (!data.content) return {results: []};\r\n                    return {results: data.content};\r\n                }\r\n            },\r\n            initSelection: function (element, callback) {\r\n                var data = [];\r\n\r\n                var tags = element.val().split(\",\");\r\n                for (i in tags) {\r\n                    data.push({\r\n                        id: tags[i],\r\n                        text: tags[i]\r\n                    });\r\n                };\r\n                callback(data);\r\n            }\r\n        });\r\n    })\r\n    .add('datepicker', function () {\r\n        var options = {\r\n            format: 'Y-m-d H:i:00',\r\n            lang: LOCALE,\r\n            dayOfWeekStart: 1\r\n        };\r\n\r\n        $('.input-datetime').each(function () {\r\n            var local_options = $.extend({}, options);\r\n            var $self = $(this);\r\n\r\n            if ($self.data('range-max-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-max-input'));\r\n                    this.setOptions({\r\n                        maxDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            if ($self.data('range-min-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-min-input'));\r\n                    this.setOptions({\r\n                        minDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            $self.datetimepicker(local_options);\r\n        });\r\n\r\n        $('.input-date').each(function () {\r\n            var local_options = $.extend(options, {\r\n                timepicker: false,\r\n                format: 'Y-m-d'\r\n            });\r\n\r\n            var $self = $(this);\r\n\r\n            if ($self.data('range-max-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-max-input'));\r\n                    this.setOptions({\r\n                        maxDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            } else if ($self.data('range-min-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-min-input'));\r\n                    this.setOptions({\r\n                        minDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            $self.datetimepicker(local_options);\r\n        });\r\n    })\r\n    .add('icon', function () {\r\n        $('*[data-icon]').add('*[data-icon-prepend]').each(function () {\r\n            var cls = $(this).data('icon');\r\n            if ($(this).hasClass('btn-labeled')) cls += ' btn-label icon';\r\n\r\n            $(this).html('<i class=\"fa fa-' + cls + '\"></i> ' + $(this).html());\r\n            $(this).removeAttr('data-icon-prepend').removeAttr('data-icon');\r\n        });\r\n\r\n        $('*[data-icon-append]').each(function () {\r\n            $(this).html($(this).html() + '&nbsp&nbsp<i class=\"fa fa-' + $(this).data('icon-append') + '\"></i>');\r\n            $(this).removeAttr('data-icon-append');\r\n        });\r\n    });","App.Form.extend('articles', {\r\n\tfields: {\r\n\t\ttitle: 'string',\r\n\t\ttext_source: 'textarea',\r\n\t\tforbid_comment: 'checkbox',\r\n\t\ttags: 'tags'\r\n\t},\r\n\tmessages: {\r\n\t\tsaved: 'Article saved'\r\n\t}\r\n\t/*onSubmit: function(e) {\r\n\t\te.preventDefault();\r\n\t\tthis.clearErrors();\r\n\r\n\t\tvar action = this._submitButton.val();\r\n\r\n\t\tswitch (action) {\r\n\t\t\tcase 'publish':\r\n\t\t\t\tvar url = '/api.articles.publish/' + this._id;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvar url = this._api_url;\r\n\t\t}\r\n\r\n\t\t$(':button', this._form).prop('disabled', true);\r\n\t\tApi[this._api_method](url, this.getFieldsData(), $.proxy(this.onResponse, this));\r\n\t}*/\r\n});\r\n\r\nApp.Controllers.add(['article.create', 'article.edit'], function(action) {\r\n\tApp.Form.articles.init($('form'));\r\n});\r\n\r\nApp.Controllers.add(['article.index', 'article.show'], function () {\r\n\tif(USER_ID) $('body').on('click', '.addToFavorite', addToFavorite);\r\n});\r\n\r\nfunction addToFavorite(e) {\r\n    var $self = $(this);\r\n    Api.post('/api.article.favorite', {id: $(this).data('id')}, function (response) {\r\n\t\t$self.parent().html(response.content);\r\n    });\r\n}","$(function () {\r\n\t$.ajaxSetup({\r\n\t\theaders: {\r\n\t\t\t'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n\t\t}\r\n\t});\r\n\r\n\trunApplication();\r\n\r\n\tfunction runApplication() {\r\n\t\tApp.Components.init();\r\n\t\tApp.Controllers.call();\r\n\t\tApp.Messages.init();\r\n\t}\r\n});"],"sourceRoot":"/source/"}