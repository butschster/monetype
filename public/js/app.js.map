{"version":3,"sources":["app.js","form.js","api.js","components.js","articles.js","run.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrvpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["var App = {\n    Controllers: {\n        _controllers: [],\n        add: function (rout, callback) {\n            if (typeof(callback) != 'function')\n                return this;\n\n            if (typeof(rout) == 'object')\n                for (var i = 0; i < rout.length; i++)\n                    this._controllers.push([rout[i], callback]);\n            else if (typeof(rout) == 'string')\n                this._controllers.push([rout, callback]);\n\n            return this;\n        },\n        call: function () {\n            var body_id = $('body:first').attr('id');\n            for (var i = 0; i < this._controllers.length; i++)\n                if (body_id == 'body.' + this._controllers[i][0])\n                    this._controllers[i][1](this._controllers[i][0]);\n        }\n    },\n    Components: {\n\n        // 0: name\n        // 1: callback\n        // 2: priority\n\n        _elements: [],\n        _modules: [],\n        add: function (module, callback, priority) {\n            if (typeof(callback) != 'function')\n                return this;\n\n            this._elements.push([module, callback, priority || 0]);\n            return this;\n        },\n        addModule: function (module, callback, priority) {\n            if (typeof(callback) != 'function')\n                return this;\n\n            this._modules.push([module, callback, priority || 0]);\n            return this;\n        },\n        call: function (module) {\n            for (var i = 0; i < this._elements.length; i++) {\n                var elm = this._elements[i];\n                if (_.isArray(module) && _.indexOf(module, elm[0]) != -1)\n                    elm[1]();\n                else if (module == elm[0])\n                    elm[1]();\n            }\n        },\n        init: function (module) {\n            this._elements = _.sortBy(this._elements, 2);\n            this._modules = _.sortBy(this._modules, 2);\n\n            for (i in this._elements) {\n                var elm = this._elements[i];\n\n                try {\n                    if (!module)\n                        elm[1]();\n                    else if (_.isArray(module) && _.indexOf(module, elm[0]) != -1)\n                        elm[1]();\n                    else if (module == elm[0])\n                        elm[1]();\n                } catch (e) {\n                    console.log(elm[0], e);\n                }\n            }\n\n            var modules = [];\n            $('[data-module]').each(function () {\n                modules.push($(this).data('module'));\n            });\n\n            modules = _.uniq(modules);\n            for (i in this._modules) {\n                var module = this._modules[i],\n                    moduleName = module[0];\n\n                if (_.indexOf(modules, moduleName) != -1) {\n                    module[1]();\n                }\n            }\n        }\n    },\n    Messages: {\n        init: function () {\n            if (typeof MESSAGE_ERRORS == 'undefined') return;\n            this.parse(MESSAGE_ERRORS, 'error');\n            this.parse(MESSAGE_SUCCESS);\n\n            $('body').on('show_message', $.proxy(function () {\n                var messages = _.toArray(arguments).slice(1);\n                this.parse(messages);\n            }, this));\n        },\n        parse: function ($messages, $type) {\n            for (text in $messages) {\n                if (text == '_external') {\n                    this.parse($messages[text], $type);\n                    continue;\n                }\n\n                this.show($messages[text], $type);\n            }\n        },\n        show: function (msg, type, icon) {\n            if (!type) type = 'success';\n\n            window.top.noty({\n                layout: 'topRight',\n                type: type,\n                icon: icon || 'fa fa-ok',\n                text: decodeURIComponent(msg)\n            });\n        },\n        error: function (message) {\n            this.show(message, 'error');\n        }\n    },\n    Dialog: {\n        confirm: function (message, callback, title, className) {\n            bootbox.confirm({\n                title: title || 'Подтверждение действия',\n                message: message,\n                className: 'modal-alert modal-warning',\n                closeButton: false,\n                callback: function (result) {\n                    if (result) callback();\n                },\n                buttons: {\n                    confirm: {\n                        label: 'Да',\n                        className: \"btn-success btn-lg\"\n                    },\n                    cancel: {\n                        label: 'Нет',\n                        className: \"btn-default btn-lg\"\n                    }\n                }\n            });\n        }\n    },\n    Loader: {\n        counter: 0,\n        getLastId: function () {\n            return this.counter;\n        },\n        init: function (container, message) {\n            if (container !== undefined && !(container instanceof jQuery)) {\n                container = $(container);\n            }\n            else if (container === undefined) {\n                container = $('body');\n            }\n\n            ++this.counter;\n\n            var $loader = $('<div class=\"_loader_container\"><span class=\"_loader_preloader\" /></div>');\n\n            if (message !== undefined) {\n                if (message instanceof jQuery)\n                    $loader.append(message);\n                else\n                    $loader.append('<span class=\"_loader_message\">' + message + '</span>');\n            }\n\n            return $loader\n                .appendTo(container)\n                .css({\n                    width: container.outerWidth(true),\n                    height: container.outerHeight(true),\n                    top: container.offset().top - $(window).scrollTop(),\n                    left: container.offset().left - $(window).scrollLeft()\n                })\n                .prop('id', 'loader' + this.getLastId());\n        },\n        show: function (container, message, speed) {\n            var speed = speed || 500;\n\n            this.init(container, message).fadeTo(speed, 0.7);\n            return this.counter;\n        },\n        hide: function (id) {\n            if (!id)\n                cont = $('._loader_container');\n            else\n                cont = $('#loader' + id);\n\n            cont.stop().fadeOut(400, function () {\n                $(this).remove();\n            });\n        }\n    }\n}","App.Form = {\r\n    extend: function (key, data) {\r\n        if (!data) var data = {};\r\n\r\n        data['_prefix'] = key;\r\n        App.Form[key] = $.extend(this._decorator, data);\r\n        return App.Form[key];\r\n    },\r\n    _decorator: {\r\n        _id: null,\r\n        _api_url: null,\r\n        _api_method: null,\r\n        _prefix: null,\r\n        _key: null,\r\n        _timestamp: null,\r\n        _isChanged: false,\r\n        _form: null,\r\n        _autoSaveTimer: null,\r\n        _fieldsData: {},\r\n        _submitButton: null,\r\n        messages: {\r\n            saved: null\r\n        },\r\n        fieldsMeta: {},\r\n        _fields: {},\r\n        autoSaveDelay: 5000,\r\n        init: function (form) {\r\n            this._form = form;\r\n            this._key = 'form' + this._prefix + this._id;\r\n\r\n            $(this._form).on('click', ':button', $.proxy(function (e) {\r\n                this._submitButton = $(e.target);\r\n            }, this));\r\n\r\n            this._fieldsData['timestamp'] = new Date().getTime();\r\n\r\n            if ((this._api_url === null || !this._api_url.length) && this._form.attr('action').indexOf('api.') >= 0) {\r\n                this._api_url = this._form.attr('action');\r\n            }\r\n\r\n            if (this._api_method === null || !this._api_method.length) {\r\n                var $method = $('input[name=\"_method\"]', this._form);\r\n\r\n                this._api_method = $method.size()\r\n                    ? $method.val().toLowerCase()\r\n                    : this._form.prop('method').toLowerCase();\r\n            }\r\n\r\n            this._autoSaveTimer = setInterval($.proxy(this.onBackup, this), this.autoSaveDelay);\r\n\r\n            this.getFieldsData();\r\n            this._id = this._fieldsData['id'];\r\n\r\n            for (i in this.fieldsMeta) {\r\n                switch (this.fieldsMeta[i]) {\r\n                    case 'tags':\r\n                        this._fields[i] = new FieldTags(this._form, i);\r\n                        break;\r\n                    case 'checkbox':\r\n                        this._fields[i] = new FieldCheckbox(this._form, i);\r\n                        break;\r\n                    case 'markdown':\r\n                        this._fields[i] = new FieldMarkdown(this._form, i);\r\n                        break;\r\n                    default:\r\n                        this._fields[i] = new FieldDefault(this._form, i);\r\n                }\r\n            }\r\n\r\n            this.onLoad();\r\n            $(window).unload($.proxy(this.onUnload, this));\r\n        },\r\n        getFieldsData: function () {\r\n            for (i in this._fields) {\r\n                this._fieldsData[i] = this._getFieldData(i);\r\n            }\r\n\r\n            return this._fieldsData;\r\n        },\r\n        setFieldsData: function (data) {\r\n            for (i in this._fields) {\r\n                if (i == 'id') continue;\r\n                this._setFieldData(i, data[i]);\r\n            }\r\n        },\r\n        getField: function (name) {\r\n            return this._fields[name] || null;\r\n        },\r\n        hasField: function(name) {\r\n            return this.fieldsMeta[name] != 'undefined';\r\n        },\r\n        _getFieldData: function (name) {\r\n            if (!this.hasField(name)) return false;\r\n            return this.getField(name).getValue();\r\n        },\r\n        _setFieldData: function (name, value) {\r\n            if (!this.hasField(name)) return false;\r\n            return this.getField(name).setValue(value);\r\n        },\r\n\r\n        /******************************************\r\n         * LocalStorage\r\n         ******************************************/\r\n        saveToLocalStorage: function (data) {\r\n            $.jStorage.set(this._key, data);\r\n            this._isChanged = false;\r\n        },\r\n        getFromLocalStorage: function () {\r\n            return $.jStorage.get(this._key);\r\n        },\r\n        clearLocalStorage: function () {\r\n            $.jStorage.deleteKey(this._key);\r\n        },\r\n        /******************************************\r\n         * Validation\r\n         ******************************************/\r\n        clearErrors: function () {\r\n            $('.validation-error').remove();\r\n            $('.form-group').removeClass('has-error');\r\n        },\r\n        onFailValidation: function (errors) {\r\n            for (field in errors) {\r\n                if (!this.hasField(field)) continue;\r\n\r\n                var $elm = this.getField(field).getElement();\r\n\r\n                $elm.closest('.form-group')\r\n                    .addClass('has-error')\r\n                    .end();\r\n\r\n                for (i in errors[field]) {\r\n                    $elm.after($('<p class=\"help-block validation-error\" />').text(errors[field][i]));\r\n                }\r\n\r\n            }\r\n        },\r\n        /******************************************\r\n         * Events\r\n         ******************************************/\r\n        onLoad: function () {\r\n            this._form\r\n                .on('submit', $.proxy(this.onSubmit, this))\r\n                .on('change keyup', 'input, select, textarea', $.proxy(this.onChange, this));\r\n\r\n            this.showAutoSaveNotify();\r\n        },\r\n        onChange: function (e) {\r\n            e.preventDefault();\r\n            this._isChanged = true;\r\n\r\n            // Удаляем уведомление об автосохранении\r\n            $('#notification_autosave').remove();\r\n        },\r\n        onSubmit: function (e) {\r\n            this.clearErrors();\r\n\r\n            $(':button', this._form).prop('disabled', true);\r\n\r\n            if(this._api_url) {\r\n                e.preventDefault();\r\n                Api[this._api_method](this._api_url, this.getFieldsData(), $.proxy(this.onResponse, this));\r\n\r\n                return false;\r\n            }\r\n        },\r\n        onResponse: function (response) {\r\n            $(':button', this._form).prop('disabled', false);\r\n            this.clearLocalStorage();\r\n        },\r\n        /******************************************\r\n         * Backup\r\n         ******************************************/\r\n        showAutoSaveNotify: function () {\r\n            var data = this.getFromLocalStorage();\r\n            if (_.isObject(data) && !_.isEmpty(data)) {\r\n                var time = new Date(data['timestamp']);\r\n\r\n                // TODO: добавить локализацию\r\n                this._form.prepend(_.template('<div class=\"alert alert-info m-b-none\" id=\"notification_autosave\">' +\r\n                    'У вас есть автосохранение от <b><%= date %> <%= time %></b>, ' +\r\n                    '<a href=\"#reset\" class=\"reset_form_from_autosave\">восстановить форму</a>?' +\r\n                    '</div>')({\r\n                    date: _getDate(time),\r\n                    time: _getTime(time)\r\n                }));\r\n\r\n                // Восстановление\r\n                $('.reset_form_from_autosave').on('click', $.proxy(function (e) {\r\n                    e.preventDefault();\r\n                    this.onRestore(data);\r\n                    $('#notification_autosave').remove();\r\n                }, this));\r\n            }\r\n        },\r\n        onBackup: function (e) {\r\n            if (!this._isChanged) return;\r\n\r\n            var data = this.getFieldsData();\r\n            data['timestamp'] = new Date().getTime();\r\n\r\n            this.saveToLocalStorage(data);\r\n        },\r\n        onRestore: function (data) {\r\n            this.setFieldsData(data);\r\n        },\r\n        onUnload: function (e) {\r\n            this.onBackup(e);\r\n        }\r\n    }\r\n}\r\n\r\nFieldDefault = function(form, name) {\r\n    this._form = form;\r\n    this._name = name;\r\n\r\n    this._element = this.getFieldInput();\r\n    this.init();\r\n};\r\n\r\nFieldDefault.prototype = {\r\n    init: function() {\r\n\r\n    },\r\n    getFieldInput: function() {\r\n        return $(':input[name=\"' + this.getName() + '\"]', this._form);\r\n    },\r\n    getElement: function() {\r\n        return this._element;\r\n    },\r\n    getValue: function() {\r\n        return this.getElement().val();\r\n    },\r\n    setValue: function(value) {\r\n        this.getElement().val(value);\r\n    },\r\n    getName: function() {\r\n        return this._name;\r\n    }\r\n};\r\n\r\nFieldCheckbox = function(form, name) {\r\n    FieldDefault.apply(this, arguments);\r\n}\r\n\r\nFieldCheckbox.prototype.__proto__ = FieldDefault.prototype;\r\n\r\nFieldCheckbox.prototype.getValue = function() {\r\n   return this.getElement().prop('checked')\r\n};\r\n\r\nFieldCheckbox.prototype.setValue = function(value) {\r\n    return this.getElement().prop('checked', value)\r\n};\r\n\r\n\r\nFieldMarkdown = function(form, name) {\r\n    FieldDefault.apply(this, arguments);\r\n}\r\n\r\nFieldMarkdown.prototype.__proto__ = FieldDefault.prototype;\r\n\r\nFieldMarkdown.prototype.init = function() {\r\n    var $elm = this.getElement();\r\n    this.editor = new SimpleMDE({\r\n        element: $elm[0]\r\n    });\r\n};\r\n\r\nFieldMarkdown.prototype.getValue = function() {\r\n    return this.editor.value();\r\n};\r\n\r\nFieldMarkdown.prototype.setValue = function(value) {\r\n    return this.editor.value(value);\r\n};\r\n\r\nFieldTags = function(form, name) {\r\n    FieldDefault.apply(this, arguments);\r\n}\r\n\r\nFieldTags.prototype.__proto__ = FieldDefault.prototype;\r\n\r\nFieldTags.prototype.getValue = function() {\r\n    return this.getElement().val().split(',');\r\n};\r\n\r\nFieldTags.prototype.setValue = function(value) {\r\n    return this.getElement().val(value.join()).trigger('change');\r\n};\r\n\r\n\r\nfunction extend(Child, Parent) {\r\n    var F = function() { }\r\n    F.prototype = Parent.prototype\r\n    Child.prototype = new F()\r\n    Child.prototype.constructor = Child\r\n    Child.superclass = Parent.prototype\r\n}\r\n\r\n// TODO: добавить локализацию\r\nfunction _getDate(d) {\r\n    var month_names = new Array(\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\");\r\n    var current_date = d.getDate();\r\n    var current_month = d.getMonth();\r\n    var current_year = d.getFullYear();\r\n    return current_date + \" \" + month_names[current_month] + \" \" + current_year\r\n}\r\n\r\nfunction _getTime(currentTime) {\r\n    var hours = currentTime.getHours();\r\n    var minutes = currentTime.getMinutes();\r\n    if (minutes < 10) {\r\n        minutes = \"0\" + minutes\r\n    }\r\n    return hours + \":\" + minutes\r\n}","var Api = {\n    _response: null,\n    get: function (uri, data, callback, async) {\n        return this.request('GET', uri, data, callback, async);\n    },\n    post: function (uri, data, callback, async) {\n        return this.request('POST', uri, data, callback, async);\n    },\n    put: function (uri, data, callback, async) {\n        return this.request('PUT', uri, data, callback, async);\n    },\n    'delete': function (uri, data, callback, async) {\n        return this.request('DELETE', uri, data, callback, async);\n    },\n    request: function (method, uri, data, callback, async) {\n        var url = this.parseUrl(uri);\n\n        $.ajaxSetup({\n            contentType: 'application/json'\n        });\n\n        if (data instanceof jQuery) {\n            data = Api.serializeObject(data);\n        }\n\n        if (typeof(data) == 'object' && method.toLowerCase() != 'get') {\n            data = JSON.stringify(data);\n        }\n\n        return $.ajax({\n            type: method,\n            url: url,\n            data: data,\n            dataType: 'json',\n            async: async !== false\n        })\n            .done(function (response) {\n                this._response = response;\n\n                if (response.code != 200)\n                    return Api.exception(response, callback);\n\n                window.top.$('body').trigger(Api.getEventKey(method, url), [this._response]);\n\n                if (response.message && response.code == 200)\n                    App.Messages.show(response.message, 'information');\n\n                if (response.popup && response.code == 200)\n                    Popup.openHTML(response.popup);\n\n                if (typeof(callback) == 'function') callback(this._response);\n            })\n            .fail(function (e) {\n                return Api.exception(e.responseJSON, callback);\n            });\n    },\n    parseUrl: function (url) {\n        return url;\n    },\n    getEventKey: function (method, url) {\n        var event = method + url.replace(SITE_URL, \":\").replace(/\\//g, ':');\n        return event.toLowerCase()\n    },\n    serializeObject: function (form) {\n        var json = {},\n            push_counters = {},\n            patterns = {\n                \"validate\": /^[a-zA-Z][a-zA-Z0-9_]*(?:\\[(?:\\d*|[a-zA-Z0-9_]+)\\])*$/,\n                \"key\": /[a-zA-Z0-9_]+|(?=\\[\\])/g,\n                \"push\": /^$/,\n                \"fixed\": /^\\d+$/,\n                \"named\": /^[a-zA-Z0-9_]+$/\n            };\n\n        var build = function (base, key, value) {\n            base[key] = value;\n            return base;\n        };\n\n        var push_counter = function (key) {\n            if (push_counters[key] === undefined) {\n                push_counters[key] = 0;\n            }\n            return push_counters[key]++;\n        };\n\n        $.each(form.serializeArray(), function () {\n            // skip invalid keys\n            if (!patterns.validate.test(this.name)) {\n                return;\n            }\n            var k,\n                keys = this.name.match(patterns.key),\n                merge = this.value,\n                reverse_key = this.name;\n\n            while ((k = keys.pop()) !== undefined) {\n                // adjust reverse_key\n                reverse_key = reverse_key.replace(new RegExp(\"\\\\[\" + k + \"\\\\]$\"), '');\n                // push\n                if (k.match(patterns.push)) {\n                    merge = build([], push_counter(reverse_key), merge);\n                }\n                // fixed\n                else if (k.match(patterns.fixed)) {\n                    merge = build([], k, merge);\n                }\n                // named\n                else if (k.match(patterns.named)) {\n                    merge = build({}, k, merge);\n                }\n            }\n            json = $.extend(true, json, merge);\n        });\n        return json;\n    },\n    exception: function (response, callback) {\n        if (typeof(callback) == 'function')\n            callback(response);\n\n        switch (response.code) {\n            case 220: // ERROR_PERMISSIONS\n\n                break;\n            case 110: // ERROR_MISSING_PAPAM\n                App.Messages.show(response.message, 'error', 'fa fa-exclamation-triangle');\n                break;\n            case 120: // ERROR_VALIDATION\n                for (i in response.errors) {\n                    App.Messages.show(response.errors[i], 'error', 'fa fa-exclamation-triangle');\n                }\n                break;\n            case 130: // ERROR_UNKNOWN\n            case 140: // ERROR_TOKEN\n            case 150: // ERROR_MISSING_ASSIGMENT\n\n                break;\n            case 301: // Redirect\n            case 302: // Redirect\n                window.location.href = response.targetUrl;\n                break;\n            case 403: // ERROR_UNAUTHORIZED\n            case 404: // ERROR_PAGE_NOT_FOUND\n                break;\n            default:\n                App.Messages.show(response.message, 'error', 'fa fa-exclamation-triangle');\n        }\n    },\n    response: function () {\n        return this._response;\n    }\n};","App.Components\r\n    .add('ajaxSetup', function () {\r\n        $.ajaxSetup({\r\n            headers: {'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')}\r\n        });\r\n    })\r\n    .add('i18nSetup', function () {\r\n        i18n.init({\r\n            lng: 'ru',\r\n            fallbackLng: [],\r\n            resGetPath: '/js/lang/__lng__.json',\r\n        });\r\n    })\r\n    .add('select', function () {\r\n        $(\"select\").select2();\r\n    })\r\n    .add('notySetup', function () {\r\n        $.noty.defaults = $.extend($.noty.defaults, {\r\n            layout: 'topRight',\r\n            theme: 'relax',\r\n            timeout: 3000\r\n        });\r\n    })\r\n    .add('validator.default', function () {\r\n        $.validator.setDefaults({\r\n            highlight: function (element) {\r\n                var elem = $(element);\r\n                if (elem.hasClass(\"select2-offscreen\")) {\r\n                    $(\"#s2id_\" + elem.attr(\"id\") + \" ul\")\r\n                        .closest('.form-group')\r\n                        .addClass('has-error');\r\n                } else {\r\n                    elem\r\n                        .closest('.form-group')\r\n                        .addClass('has-error');\r\n                }\r\n            },\r\n            unhighlight: function (element) {\r\n                var elem = $(element);\r\n\r\n                if (elem.hasClass(\"select2-offscreen\")) {\r\n                    $(\"#s2id_\" + elem.attr(\"id\") + \" ul\")\r\n                        .closest('.form-group')\r\n                        .removeClass('has-error')\r\n                        .find('help-block-hidden')\r\n                        .removeClass('help-block-hidden')\r\n                        .addClass('help-block')\r\n                        .show();\r\n                } else {\r\n                    elem\r\n                        .closest('.form-group')\r\n                        .removeClass('has-error')\r\n                        .find('help-block-hidden')\r\n                        .removeClass('help-block-hidden')\r\n                        .addClass('help-block')\r\n                        .show();\r\n                }\r\n            },\r\n            errorElement: 'p',\r\n            errorClass: 'jquery-validate-error help-block',\r\n            errorPlacement: function (error, element) {\r\n                var $p, has_e, is_c;\r\n                is_c = element.is('input[type=\"checkbox\"]') || element.is('input[type=\"radio\"]');\r\n                has_e = element.closest('.form-group').find('.jquery-validate-error').length;\r\n                if (!is_c || !has_e) {\r\n                    if (!has_e) {\r\n                        element.closest('.form-group').find('.help-block').removeClass('help-block').addClass('help-block-hidden').hide();\r\n                    }\r\n                    error.addClass('help-block');\r\n                    if (is_c) {\r\n                        return element.closest('[class*=\"col-\"]').append(error);\r\n                    } else {\r\n                        $p = element.parent();\r\n                        if ($p.is('.input-group')) {\r\n                            return $p.parent().append(error);\r\n                        } else {\r\n                            return $p.append(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    })\r\n    .add('tags', function () {\r\n        $('textarea.input-tags').select2({\r\n            tags: [],\r\n            minimumInputLength: 0,\r\n            tokenSeparators: [',', ' ', ';'],\r\n            createSearchChoice: function (term, data) {\r\n                if ($(data).filter(function () {\r\n                        return this.text.localeCompare(term) === 0;\r\n                    }).length === 0) {\r\n                    return {\r\n                        id: term,\r\n                        text: term\r\n                    };\r\n                }\r\n            },\r\n            multiple: true,\r\n            ajax: {\r\n                url: '/api.tags',\r\n                dataType: \"json\",\r\n                data: function (term, page) {\r\n                    return {tag: term};\r\n                },\r\n                results: function (data, page) {\r\n                    if (!data.content) return {results: []};\r\n                    return {results: data.content};\r\n                }\r\n            },\r\n            initSelection: function (element, callback) {\r\n                var data = [];\r\n\r\n                var tags = element.val().split(\",\");\r\n                for (i in tags) {\r\n                    data.push({\r\n                        id: tags[i],\r\n                        text: tags[i]\r\n                    });\r\n                };\r\n                callback(data);\r\n            }\r\n        });\r\n    })\r\n    .add('datepicker', function () {\r\n        var options = {\r\n            format: 'Y-m-d H:i:00',\r\n            lang: LOCALE,\r\n            dayOfWeekStart: 1\r\n        };\r\n\r\n        $('.input-datetime').each(function () {\r\n            var local_options = $.extend({}, options);\r\n            var $self = $(this);\r\n\r\n            if ($self.data('range-max-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-max-input'));\r\n                    this.setOptions({\r\n                        maxDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            if ($self.data('range-min-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-min-input'));\r\n                    this.setOptions({\r\n                        minDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            $self.datetimepicker(local_options);\r\n        });\r\n\r\n        $('.input-date').each(function () {\r\n            var local_options = $.extend(options, {\r\n                timepicker: false,\r\n                format: 'Y-m-d'\r\n            });\r\n\r\n            var $self = $(this);\r\n\r\n            if ($self.data('range-max-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-max-input'));\r\n                    this.setOptions({\r\n                        maxDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            } else if ($self.data('range-min-input')) {\r\n                local_options['onShow'] = function (ct) {\r\n                    var $input = $($self.data('range-min-input'));\r\n                    this.setOptions({\r\n                        minDate: $input.val() ? $input.val() : false\r\n                    });\r\n                }\r\n            }\r\n\r\n            $self.datetimepicker(local_options);\r\n        });\r\n    })\r\n    .add('icon', function () {\r\n        $('*[data-icon]').add('*[data-icon-prepend]').each(function () {\r\n            var cls = $(this).data('icon');\r\n            if ($(this).hasClass('btn-labeled')) cls += ' btn-label icon';\r\n\r\n            $(this).html('<i class=\"fa fa-' + cls + '\"></i> ' + $(this).html());\r\n            $(this).removeAttr('data-icon-prepend').removeAttr('data-icon');\r\n        });\r\n\r\n        $('*[data-icon-append]').each(function () {\r\n            $(this).html($(this).html() + '&nbsp&nbsp<i class=\"fa fa-' + $(this).data('icon-append') + '\"></i>');\r\n            $(this).removeAttr('data-icon-append');\r\n        });\r\n    });","App.Form.extend('articles', {\r\n\tfieldsMeta: {\r\n\t\ttitle: 'string',\r\n\t\ttext_source: 'markdown',\r\n\t\tforbid_comment: 'checkbox',\r\n\t\ttags: 'tags'\r\n\t},\r\n\tmessages: {\r\n\t\tsaved: 'Article saved'\r\n\t}\r\n});\r\n\r\nApp.Controllers.add(['article.create', 'article.edit'], function(action) {\r\n\tApp.Form.articles.init($('form'));\r\n});\r\n\r\nApp.Controllers.add(['article.index', 'article.show'], function () {\r\n\tif(USER_ID) $('body').on('click', '.addToFavorite', addToFavorite);\r\n});\r\n\r\nApp.Controllers.add('article.show', function () {\r\n\t$('.commentItem--reply').on('click', function(e) {\r\n\t\te.preventDefault();\r\n\t\tshowCommentForm($(this), $(this).data('id'));\r\n\t});\r\n\r\n\t$('.commentForm--title a').on('click', function(e) {\r\n\t\te.preventDefault();\r\n\t\tshowCommentForm($(this).parent(), null);\r\n\t});\r\n\r\n\t// Validation for login form\r\n\t$(\"#commentForm\").validate({\r\n\t\trules: {\r\n\t\t\ttext: {\r\n\t\t\t\trequired: true,\r\n\t\t\t\tminlength: 10,\r\n\t\t\t},\r\n\t\t\ttitle: {\r\n\t\t\t\tmaxlength: 255\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n});\r\n\r\nfunction showCommentForm($container, parentId) {\r\n\t$('#commentParentId').val(parentId);\r\n\t$('#commentForm').insertAfter($container);\r\n}\r\n\r\nfunction addToFavorite(e) {\r\n    var $self = $(this);\r\n    Api.post('/api.article.favorite', {id: $(this).data('id')}, function (response) {\r\n\t\t$self.parent().html(response.content);\r\n    });\r\n}","$(function () {\n\t$.ajaxSetup({\n\t\theaders: {\n\t\t\t'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n\t\t}\n\t});\n\n\trunApplication();\n\n\tfunction runApplication() {\n\t\tApp.Components.init();\n\t\tApp.Controllers.call();\n\t\tApp.Messages.init();\n\t}\n});"],"sourceRoot":"/source/"}