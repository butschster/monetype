@import "../../../bower_components/bootstrap/less/variables";
@import "font";
@import "variables";

.CodeMirror {
  div.CodeMirror-secondarycursor {
    border-left: 1px solid silver;
  }
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}

.CodeMirror-guttermarker {
  color: black;
}

.CodeMirror-guttermarker-subtle {
  color: #999;
}

/* CURSOR */

.CodeMirror-cursor {
  border-left: 1px solid @text-color;
  border-right: none;
  width: 0;
  position: absolute;
}

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 3;
}

.cm-fat-cursor {
  .CodeMirror-cursor {
    width: auto;
    border: 0;
    background: #7e7;
  }

  div.CodeMirror-cursors {
    z-index: 1;
  }
}

.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  animation: blink 1.06s steps(1) infinite;
  background-color: #7e7;
}

@-moz-keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}

@-webkit-keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}

@keyframes blink {
  0% {
  }
  50% {
    background-color: transparent;
  }
  100% {
  }
}

/* Can style cursor different in overwrite (non-insert) mode */
.CodeMirror-overwrite .CodeMirror-cursor {

}

.cm-tab {
  display: inline-block;
  text-decoration: inherit;
}

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  position: absolute;
}

/* DEFAULT THEME */

.cm-negative {
  color: #d44;
}

.cm-positive {
  color: #292;
}

.cm-header, .cm-strong {
  font-weight: bold;
}

.cm-em {
  font-style: italic;
}

.cm-link {
  text-decoration: underline;
}

.cm-strikethrough {
  text-decoration: line-through;
}

.cm-s-default {
  .cm-header {
    color: blue;
  }

  .cm-quote {
    color: #090;
  }

  .cm-keyword {
    color: #708;
  }

  .cm-atom {
    color: #219;
  }

  .cm-number {
    color: #164;
  }

  .cm-def {
    color: #00f;
  }

  .cm-variable,
  .cm-punctuation,
  .cm-property,
  .cm-operator {
  }

  .cm-variable-2 {
    color: #05a;
  }

  .cm-variable-3 {
    color: #085;
  }

  .cm-comment {
    color: #a50;
  }

  .cm-string {
    color: #a11;
  }

  .cm-string-2 {
    color: #f50;
  }

  .cm-meta {
    color: #555;
  }

  .cm-qualifier {
    color: #555;
  }

  .cm-builtin {
    color: #30a;
  }

  .cm-bracket {
    color: #997;
  }

  .cm-tag {
    color: #170;
  }

  .cm-attribute {
    color: #00c;
  }

  .cm-hr {
    color: #999;
  }

  .cm-link {
    color: #00c;
  }

  .cm-error {
    color: #f00;
  }
}

.cm-invalidchar {
  color: #f00;
}

.CodeMirror-composing {
  border-bottom: 2px solid;
}

/* Default styles for common addons */

div.CodeMirror {
  span.CodeMirror-matchingbracket {
    color: #0f0;
  }

  span.CodeMirror-nonmatchingbracket {
    color: #f22;
  }
}

.CodeMirror-matchingtag {
  background: rgba(255, 150, 0, .3);
}

.CodeMirror-activeline-background {
  background: #e8f2ff;
}

.CodeMirror-scroll {
  overflow: scroll !important; /* Things will break if this is overridden */
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px;
  margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
}

.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actuall scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}

.CodeMirror-vscrollbar {
  right: 0;
  top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}

.CodeMirror-hscrollbar {
  bottom: 0;
  left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}

.CodeMirror-scrollbar-filler {
  right: 0;
  bottom: 0;
}

.CodeMirror-gutter-filler {
  left: 0;
  bottom: 0;
}

.CodeMirror-gutters {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 3;
}

.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  display: inline-block;
  margin-bottom: -30px;
  /* Hack to make IE7 behave */
  *zoom: 1;
  *display: inline;
}

.CodeMirror-gutter-wrapper {
  position: absolute;
  z-index: 4;
  background: none !important;
  border: none !important;
  user-select: none;
}

.CodeMirror-gutter-background {
  position: absolute;
  top: 0;
  bottom: 0;
  z-index: 4;
}

.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}

.CodeMirror-lines {
  cursor: text;
  padding: 4px 0; /* Vertical padding around content */
  min-height: 1px; /* prevents collapsing before first draw */
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}

.CodeMirror-widget {
}

.CodeMirror-code {
  outline: none;
}

/* Force content-box sizing for the elements where we expect it */
.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;

  pre {
    position: static;
  }
}

div.CodeMirror-dragcursors {
  visibility: visible;
}

.CodeMirror-selected {
  background: #d9d9d9;
}

.CodeMirror-focused {
  div.CodeMirror-cursors {
    visibility: visible;
  }

  .CodeMirror-selected {
    background: #d7d4f0;
  }
}

.CodeMirror-crosshair {
  cursor: crosshair;
}

.CodeMirror-line::selection,
.CodeMirror-line > span::selection,
.CodeMirror-line > span > span::selection {
  background: #d7d4f0;
}

.CodeMirror-line::-moz-selection,
.CodeMirror-line > span::-moz-selection,
.CodeMirror-line > span > span::-moz-selection {
  background: #d7d4f0;
}

.cm-searching {
  background: #ffa;
  background: rgba(255, 255, 0, .4);
}

/* Used to force a border model for a node */
.cm-force-border {
  padding-right: .1px;
}

/* See issue #2901 */
.cm-tab-wrap-hack:after {
  content: '';
}

/* Help users use markselection to safely style text background */
span.CodeMirror-selectedtext {
  background: none;
}

.CodeMirror-scroll {
  min-height: 300px
}

.CodeMirror-fullscreen {
  background: #fff;
  position: fixed !important;
  top: 50px;
  left: 0;
  right: 0;
  bottom: 0;
  height: auto;
  z-index: 9;
}

.CodeMirror-sided {
  width: 50% !important;
}

.CodeMirror {
  height: auto;
  min-height: 300px;
  border: 1px solid #ddd;
  font: inherit;
  z-index: 5;
  position: relative;
  overflow: hidden;
  background: white;

  .CodeMirror-selected {
    background: #d9d9d9;
  }

  .CodeMirror-code {
    font-size: 16px;
    line-height: 30px;

    pre {
      padding: 0 0 0 14px;
      border-width: 0;
      background: transparent;
      font-family: inherit;
      font-size: inherit;
      margin: 0;
      line-height: inherit;
      color: inherit;
      z-index: 2;
      position: relative;
      overflow: visible;
      -webkit-tap-highlight-color: transparent;

      word-wrap: break-word;
      white-space: pre-wrap;
      word-break: normal;
    }

    .cm-header-1,
    .cm-header-2,
    .cm-header-3,
    .cm-header-4,
    .cm-header-5 {
      font-family: @headings-font-family;
      font-weight: @headings-font-weight;
      line-height: @headings-line-height;
      color: @headings-color;
    }

    .cm-header-1,
    .cm-header-2,
    .cm-header-3 {
      margin-top: @line-height-computed;
      margin-bottom: (@line-height-computed / 2);
    }

    .cm-header-4,
    .cm-header-5 {
      margin-top: (@line-height-computed / 2);
      margin-bottom: (@line-height-computed / 2);
    }

    .cm-header-1 {
      font-size: @font-size-h1;
    }

    .cm-header-2 {
      font-size: @font-size-h2;
    }

    .cm-header-3 {
      font-size: @font-size-h3;
    }

    .cm-header-4 {
      font-size: @font-size-h4;
    }

    .cm-header-5 {
      font-size: @font-size-h5;
    }

    .cm-comment {
      background: rgba(0, 0, 0, .05);
      border-radius: 2px;
    }

    .cm-link {
      color: #7f8c8d;
    }

    .cm-url {
      color: #aab2b3;
    }

    .cm-tag {
      font-weight: bold;
    }

    .cm-strikethrough {
      text-decoration: line-through;
    }

    .cm-null {
      font-size: 16px;
      line-height: 30px;
    }
  }

  .cm-spell-error:not(.cm-url):not(.cm-comment) {
    background: rgba(255, 0, 0, .15);
  }
}

.editor-toolbar {
  position: relative;
  opacity: .6;
  user-select: none;
  padding: 10px;
  border-top: 1px solid #bbb;
  border-left: 1px solid #bbb;
  border-right: 1px solid #bbb;

  a {
    display: inline-block;
    text-align: center;
    text-decoration: none !important;
    color: #2c3e50 !important;
    width: 30px;
    height: 30px;
    margin: 0;
    border: 1px solid transparent;
    border-radius: 3px;
    cursor: pointer;

    &.active,
    &:hover {
      background: #fcfcfc;
      border-color: #95a5a6;
    }

    &:before {
      line-height: 30px
    }
  }

  i.separator {
    display: inline-block;
    width: 0;
    border-left: 1px solid #d9d9d9;
    border-right: 1px solid #fff;
    color: transparent;
    text-indent: -10px;
    margin: 0 6px;
  }

  &.disabled-for-preview a:not(.no-disable) {
    pointer-events: none;
    background: #fff;
    border-color: transparent;
    text-shadow: inherit;
  }

  &:hover,
  & input.title:focus,
  & input.title:hover {
    opacity: .8
  }

  &.fullscreen {
    width: 100%;
    height: 50px;
    overflow-x: auto;
    overflow-y: hidden;
    white-space: nowrap;
    padding-top: 10px;
    padding-bottom: 10px;
    box-sizing: border-box;
    background: #fff;
    border: 0;
    position: fixed;
    top: 0;
    left: 0;
    opacity: 1;
    z-index: 9;

    &:before {
      width: 20px;
      height: 50px;
      background: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(125, 185, 232, 0.01) 100%);
      position: fixed;
      top: 0;
      left: 0;
      margin: 0;
      padding: 0;
    }

    &:after {
      width: 20px;
      height: 50px;
      background: linear-gradient(to right, rgba(125, 185, 232, 0.01) 0%, rgba(254, 254, 255, 1) 99%, rgba(255, 255, 255, 1) 100%);
      position: fixed;
      top: 0;
      right: 0;
      margin: 0;
      padding: 0;
    }
  }
}

@media only screen and (max-width: 700px) {
  .editor-toolbar a.no-mobile {
    display: none;
  }
}

.editor-statusbar {
  padding: 8px 10px;
  font-size: 12px;
  color: #959694;
  text-align: right;

  span {
    display: inline-block;
    min-width: 4em;
    margin-left: 1em;
  }

  .lines:before {
    content: 'lines: '
  }

  .words:before {
    content: 'words: '
  }
}

.editor-preview-side,
.editor-preview {
  padding: 10px;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: #fff;
  z-index: 2;
  overflow: auto;
  display: none;
  box-sizing: border-box;
  font-size: 16px;
  line-height: 30px;
}

.editor-preview-side {
  position: fixed;
  bottom: 0;
  width: 50%;
  height: auto;
  top: 50px;
  right: 0;
  left: auto;
  z-index: 9999;
  border: 1px solid #ddd;
}

.editor-preview-active-side {
  display: block
}

.editor-preview-active {
  display: block;
  font-size: 16px;
  line-height: 30px;
}

.editor-preview pre,
.editor-preview-side pre {
  margin-bottom: 10px;
}

.editor-preview table td,
.editor-preview table th,
.editor-preview-side table td,
.editor-preview-side table th {
  border: 1px solid #ddd;
  padding: 5px;
}